    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: php-openshift-s2i
    labels:
      template: php-openshift-s2i
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "php-openshift-s2i-mvilche"
      iconClass: "icon-github"
      description: >-
        Php Application S2i Images
        Martin Fabrizzio Vilche.
        https://github.com/mvilche.

  objects:

  - apiVersion: v1
    data:
      env: |-
        APP_NAME=Lumen
        APP_ENV=local
        APP_KEY=
        APP_DEBUG=true
        APP_URL=http://miapp
        APP_TIMEZONE=America/Montevideo
        LOG_CHANNEL=stack
        LOG_SLACK_WEBHOOK_URL=
        DB_CONNECTION=
        DB_HOST=
        DB_PORT=
        DB_DATABASE=
        DB_USERNAME=user
        DB_PASSWORD=pass
        CACHE_DRIVER=file
        QUEUE_CONNECTION=sync
    kind: ConfigMap
    metadata:
      name: composer-env-${APP_NAME}      


  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
      name: ${APP_NAME}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${PHP_VERSION}-s2i
        deploymentconfig: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources:
          requests:          
            cpu: 100m
            memory: 256Mi          
          limits:
            cpu: 500m
            memory: 512Mi
        type: Recreate
      template:
        metadata:
          labels:
            app: ${PHP_VERSION}-s2i
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - env:
                - name: WAITFOR_HOST
                  value:
                - name: WAITFOR_PORT
                  value:
                - name: TIMEZONE
                  value: America/Montevideo
                - name: MIGRATIONS
                  value: '0'
              image: "${APP_NAME}-${PHP_VERSION}:latest"
              imagePullPolicy: Always
              name: ${APP_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 20
                successThreshold: 1
                httpGet:
                  port: 8080
                  path: /
                timeoutSeconds: 15
              readinessProbe:
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 20
                successThreshold: 1
                httpGet:
                  port: 8080
                  path: /
                timeoutSeconds: 15
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi          
                limits:
                  cpu: 500m
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/composer_env
                  name: composer-env-${APP_NAME}                 
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 10
          volumes:
            - configMap:
                name: composer-env-${APP_NAME}
              name: composer-env-${APP_NAME}                    
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}-${PHP_VERSION}:latest"
          type: ImageChange



  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
      name: ${APP_NAME}-${PHP_VERSION}
    spec:
      completionDeadlineSeconds: 1800
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}-${PHP_VERSION}:latest
      postCommit: {}
      resources:
        requests:          
          cpu: 100m
          memory: 100Mi          
        limits:
          cpu: 500m
          memory: 1024Mi
      runPolicy: Serial
      source:
        git:
          uri: ${APP_REPO}
        type: Git
      strategy:
        sourceStrategy:
          incremental: true
          from:
            kind: ImageStreamTag
            name: ${PHP_VERSION}-s2i:latest
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange
        - imageChange:
            from:
              kind: "ImageStreamTag"
              name: "${PHP_VERSION}-s2i:latest"

  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
      name: ${APP_NAME}-${PHP_VERSION}
    spec: {}



#### fin builder

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
      name: ${APP_NAME}
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: ${PHP_VERSION}-s2i
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
      name: ${APP_NAME}
    spec:
      host:
      port:
        targetPort: http
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None



  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
        build: ${PHP_VERSION}-s2i
      name: ${PHP_VERSION}-s2i
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: '${PHP_VERSION}-s2i:latest'
      postCommit: {}
      resources:
        requests:          
          cpu: 100m
          memory: 100Mi          
        limits:
          cpu: 500m
          memory: 1024Mi
      runPolicy: Serial
      source:
        contextDir: ${PHP_VERSION}
        git:
          ref: master
          uri: 'https://github.com/mvilche/php-s2i-openshift.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile.centos8
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${PHP_VERSION}-s2i
      name: ${PHP_VERSION}-s2i
    spec: {}


########## FIN php


  ################PARAMETROS
  parameters:
    - name: PHP_VERSION
      displayName: Php Version - See https://github.com/mvilche/php-s2i-openshift.git
      value: 'php72'
      required: true
    - name: APP_NAME
      displayName: Application Name
      value: 'miapp'
      required: true
    - name: APP_REPO
      displayName: Php application repository
      value: 'https://github.com/myuser/php-composer-sample-app.git'
      required: true

  ###############

